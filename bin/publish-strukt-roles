#!/usr/bin/env php
<?php

$app_root = realpath(__DIR__."/../../../../");
$pkg_dir = realpath(__DIR__."/../");

$cfg = parse_ini_file(sprintf("%s/cfg/app.ini", $app_root));

if(trim($cfg["app-name"]) == "__APP__")
	throw new \Exception("Create an cfg[app-name] in your cfg/app.ini file via generate:app cli cmd!");

require(sprintf("%s/vendor/autoload.php", $app_root));

$app_dir = sprintf("%s/app/src/%s", $app_root, $cfg["app-name"]);
Strukt\Fs::rename(sprintf("%s/AuthModule", $app_dir), sprintf("%s/AuthModule~", $app_dir));
Strukt\Fs::mkdir(sprintf("%s/AuthModule", $app_dir));

foreach(array(

			"Controller",
			"Tests",
			"Form",
			"Router",
			"Command"

		) as $folder)
			Strukt\Fs::mkdir(sprintf("%s/AuthModule/%s", $app_dir, $folder));

$auth_mod_file = sprintf("%s/AuthModule/%sAuthModule.php", $app_dir, $cfg["app-name"]);
copy(sprintf("%s/app/src/App/AuthModule/AuthModule.php", $pkg_dir), $auth_mod_file);
$contents = str_replace("__APP__", $cfg["app-name"], Strukt\Fs::cat($auth_mod_file));
Strukt\Fs::overwrite($auth_mod_file, $contents);

Strukt\Fs::cpr(sprintf("%s/database", $pkg_dir), sprintf("%s/database", $app_root));

Strukt\Fs::rename(sprintf("%s/console", $app_root), sprintf("%s/console~", $app_root));
copy(sprintf("%s/console", $pkg_dir), sprintf("%s/console", $app_root));

$index_file = sprintf("%s/index.php", $app_root);
Strukt\Fs::rename(sprintf("%s/index.php", $app_root), sprintf("%s/index.php~", $app_root));
copy(sprintf("%s/index.php", $pkg_dir), $index_file);
$contents = str_replace("__APP__", $cfg["app-name"], $index_file);
Strukt\Fs::overwrite($index_file, $contents);

foreach(glob(sprintf("%s/app/**/**/**/**/**", $pkg_dir)) as $file){

	$path = str_replace(array($pkg_dir, "/App/"), array("", sprintf("/%s/", $cfg["app-name"])), $file);

	$content = str_replace("__APP__", $cfg["app-name"], file_get_contents($file));

	$file = new SplFileObject($app_root.$path, "w+"); 
	$file->fwrite($content);
} 